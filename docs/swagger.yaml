basePath: /
definitions:
  controller.SwaggerResponse:
    properties:
      code:
        description: 响应码
        type: integer
      msg:
        description: 描述
        type: string
    type: object
  controller.SwaggerResponseData:
    properties:
      code:
        description: 响应码
        type: integer
      data:
        additionalProperties:
          type: string
        description: 返回数据
        type: object
      msg:
        description: 描述
        type: string
    type: object
  model.Node:
    properties:
      duration:
        type: integer
      id:
        type: integer
      nodeName:
        type: string
      state:
        type: integer
    type: object
  model.Physical:
    properties:
      chinese_name:
        type: string
      conversion:
        type: string
      id:
        type: integer
      meaning:
        type: string
      physicalName:
        type: string
    type: object
  model.User:
    properties:
      avatar:
        type: string
      id:
        type: integer
      password:
        type: string
      role:
        description: '0:管理员 , 1: 普通用户'
        type: integer
      userName:
        type: string
    type: object
host: 127.0.0.1:9027
info:
  contact: {}
  description: API文档
  title: 天气管理系统后端API文档
  version: "1.0"
paths:
  /data:
    post:
      consumes:
      - application/json
      parameters:
      - description: 当前页数,默认为1
        in: query
        name: pageNum
        type: integer
      - description: 每页大小，默认为7
        in: query
        name: pageSize
        type: integer
      - description: 当前用户id
        in: query
        name: id
        required: true
        type: integer
      - description: '条件筛选: 设备ID'
        in: body
        name: nodeID
        required: true
        schema:
          type: integer
      - description: '条件筛选: 物理量'
        in: body
        name: dataName
        required: true
        schema:
          type: string
      - description: '条件筛选: 时间:yy.mm.dd hh:mm:ss - yy.mm.dd hh:mm:ss'
        in: body
        name: time
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponse'
      summary: 显示当前用户可见的所有数据
      tags:
      - 数据管理
  /data/download/:id:
    get:
      parameters:
      - description: 当前用户id
        in: query
        name: id
        required: true
        type: integer
      - description: '条件筛选: 设备ID'
        in: body
        name: nodeID
        required: true
        schema:
          type: integer
      - description: '条件筛选: 物理量'
        in: body
        name: dataName
        required: true
        schema:
          type: string
      - description: '条件筛选: 时间:yy.mm.dd hh:mm:ss - yy.mm.dd hh:mm:ss'
        in: body
        name: time
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: 下载成功
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 导出当前用户的所有可见设备的数据
      tags:
      - 数据管理
  /login:
    post:
      consumes:
      - application/json
      description: 用户输入用户名和密码登录
      parameters:
      - description: 用户对象，包括用户名和密码两个属性
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
        "422":
          description: 密码错误
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
        "442":
          description: 用户不存在
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
        "500":
          description: 系统发放token异常
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 用户登录
      tags:
      - 用户管理
  /node:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 返回设备列表
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 获取所有设备信息
      tags:
      - 设备管理
    post:
      consumes:
      - application/json
      parameters:
      - description: 新设备
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Node'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponse'
        "442":
          description: 设备已存在
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 管理员新建设备
      tags:
      - 设备管理
  /node/:id:
    delete:
      parameters:
      - description: 具体删除的设备ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
        "400":
          description: 用户不存在
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 管理员删除设备
      tags:
      - 设备管理
    get:
      parameters:
      - description: 当前用户的ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回设备列表
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 展示当前用户可见设备
      tags:
      - 设备管理
    put:
      consumes:
      - application/json
      parameters:
      - description: 新设备
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/model.Node'
      - description: 具体修改的设备的ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponse'
        "400":
          description: 设备不存在
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 管理员修改设备信息
      tags:
      - 设备管理
  /node/setTime:
    post:
      consumes:
      - application/json
      parameters:
      - description: yy.mm.dd hh:mm:ss
        in: query
        name: time
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponse'
        "442":
          description: Server无响应
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 管理员修改设备系统时间
      tags:
      - 设备管理
  /phy:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 返回物理量列表
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 展示9种物理量的信息
      tags:
      - 物理量管理
  /phy/:id:
    put:
      consumes:
      - application/json
      parameters:
      - description: 物理量信息
        in: body
        name: node
        required: true
        schema:
          $ref: '#/definitions/model.Physical'
      - description: 具体修改的物理量的ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponse'
        "400":
          description: 物理量不存在
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 管理员修改物理量信息
      tags:
      - 物理量管理
  /register:
    post:
      consumes:
      - application/json
      description: 用于管理员注册新用户
      parameters:
      - description: 新用户，传入用户名和密码
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponse'
        "442":
          description: 用户已存在
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 用户注册
      tags:
      - 用户管理
  /user:
    delete:
      parameters:
      - description: 具体修改的用户的ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponse'
        "400":
          description: 用户不存在
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 管理员修改用户信息
      tags:
      - 用户管理
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 返回用户id，头像avatar，用户名name,用户角色role
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 获取登录用户的信息
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      parameters:
      - description: 新用户的用户名、密码
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponse'
        "442":
          description: 用户已存在
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 管理员添加用户
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      parameters:
      - description: 新用户的用户名、密码
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      - description: 具体修改的用户的ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SwaggerResponse'
        "400":
          description: 用户不存在
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 管理员修改用户信息
      tags:
      - 用户管理
  /user/users:
    post:
      consumes:
      - application/json
      parameters:
      - description: 当前页数，默认为1
        in: query
        name: pageNum
        type: integer
      - description: 每页数据个数，默认为5
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回用户列表users，用户个数count
          schema:
            $ref: '#/definitions/controller.SwaggerResponseData'
      summary: 管理员获取所有用户信息及其设备
      tags:
      - 用户管理
swagger: "2.0"
